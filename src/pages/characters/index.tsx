import CardsPiece from "@/global/components/Card";
import React, { Fragment, useEffect, useState } from "react";
import * as M from "@mui/material";
import * as S from "@/styles/styles.characters";
import NavBar from "@/global/components/NavBar";
import { Loading } from "@/global/components/Loading";
import Head from "next/head";
import { PaginationComponent } from "@/global/components/Pagination";
import { SelectOptionsComponent } from "@/global/components/SelectOptions";
import { usePiece } from "@/global/Provider/context";
import { Data } from "@/global/@types/types";

export default function Characters() {
  const [currentPage, setCurrentPage] = useState(0);
  const [itensPerPage, setItensPerPage] = useState(12);
  const {data, loading, fetchOnePieceData, setData} = usePiece()

  const pages = Math.ceil(data && Object.entries(data).length / itensPerPage);
  const startIndex = currentPage * itensPerPage;
  const endIndex = startIndex + itensPerPage;
  const currentItens = data && Object.entries(data).slice(startIndex, endIndex);

  const resultSearchTitle = () => {
    return (
      <S.Heading>
        <SelectOptionsComponent
          itensPerPage={itensPerPage}
          setItensPerPage={setItensPerPage}
        />
      </S.Heading>
    );
  };

  useEffect(() => {
    if (!Number.isInteger(itensPerPage) || itensPerPage <= 0) {
      setItensPerPage(12);
    }
  }, [itensPerPage, pages]);

  useEffect(() => {
    fetchOnePieceData()
  },[])

  const pieceFilter = (name: string) => {
    if (name === "") {
      fetchOnePieceData();
    }
    let filterPiece = [];
    for (let i in data) {
      if (data[i]?.name?.toLowerCase()?.includes(name.toLowerCase())) {
        filterPiece.push(data[i]);
      }
    }
    setData(filterPiece);
  };

  return (
    <Fragment>
      <Head>
        <title>One Piece | All Characters</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <NavBar  IsSearch />      
      {loading ? (
        <Loading />
      ) : (
        <>
          <M.Grid
            container
            spacing={{ xs: 2, md: 3 }}
            columns={{ xs: 4, sm: 8, md: 12 }}
          >
            {currentItens?.map((item: Data[], index: React.Key | null | undefined) => {
              return (
                <M.Grid item xs={3} key={index}>
                  <CardsPiece data={item} />
                </M.Grid>
              );
            })}
          </M.Grid>
          <M.Grid
          sx={{display: 'flex', justifyContent: 'space-around'}}
          >
          {resultSearchTitle()}
          <PaginationComponent
              pages={pages}
              setCurrentPage={setCurrentPage}
              currentPage={currentPage} 
              />
              </M.Grid>
        </>
      )}
    </Fragment>
  );
}
