import CardsPiece from "@/global/components/Card";
import React, { Fragment, useEffect, useState } from "react";
import * as M from "@mui/material";
import NavBar from "@/global/components/NavBar";
import { getPiece } from "@/services/onePieceServices";
import { Loading } from "@/global/components/Loading";
import axios from "axios";
import { useRouter } from "next/router";
import Head from "next/head";
import ModalComponent from "@/global/components/Modal";

export default function Characters() {
  const [data, setData] = useState<any>([]);
  const [resposta, setResposta] = useState([]);
  const [open, setOpen] = React.useState(false);
  const [loading, setLoading] = useState(false);
  const handleOpen = () => setOpen(true);
  const handleClose = () => setOpen(false);
  
  const router = useRouter();
  const { id } = router.query;

  const onePiece = (id: never[]) => {
    axios
      .get(`https://one-piece-br-default-rtdb.firebaseio.com/characters.json?id=${id}`)
      .then((response: { data: any }) => {
        setResposta(response.data);
      })
      .catch(function (error: { toJSON: () => any }) {
        console.log(error.toJSON());
      });
  };
console.log(resposta, 'resposta');

useEffect(() => {
  setLoading(true)
  getPiece()
    .then((res: any) => {
      setData(res?.data);
      setLoading(false)
    })
    .catch(function (error: { toJSON: () => any }) {
      console.log(error.toJSON());
    });
}, []);

  console.log(data, "data");
  
  const pieceFilter = (name: string) => {
    if (name === "") {
      getPiece();
    }
    let filterPiece: any = [];
    for (let i in data) {
      if (data[i].name.includes(name)) {
        filterPiece.push(data[i]);
      }
    }
    setData(filterPiece);
  };

  return (
    <Fragment>
       <Head>
        <title>One Piece | All Characters</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <NavBar pieceFilter={pieceFilter} value={data} IsSearch />
      {loading ? (
        <Loading />
      ) : (
        <>
          <M.Grid
            container
            spacing={{ xs: 2, md: 3 }}
            columns={{ xs: 4, sm: 8, md: 12 }}
          >
            {data &&
              Object.values(data).map((item: any, index: any) => {
                return (
                  <M.Grid
                    item
                    xs={3}
                    key={index}
                    onClick={() => onePiece(item.id)}
                  >
                    <CardsPiece data={item} key={item.id} action={handleOpen} />
                  </M.Grid>
                );
              })}
          </M.Grid>
        </>
      )}
      {open && (
        <ModalComponent
        open={open}
        onClose={handleClose}
        />
      )}
    </Fragment>
  );
}
